"use strict";(self.webpackChunknew_tremor_website=self.webpackChunknew_tremor_website||[]).push([[7985],{3905:function(t,e,r){r.d(e,{Zo:function(){return u},kt:function(){return m}});var n=r(67294);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function s(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function a(t,e){if(null==t)return{};var r,n,i=function(t,e){if(null==t)return{};var r,n,i={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(i[r]=t[r]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(i[r]=t[r])}return i}var c=n.createContext({}),p=function(t){var e=n.useContext(c),r=e;return t&&(r="function"==typeof t?t(e):s(s({},e),t)),r},u=function(t){var e=p(t.components);return n.createElement(c.Provider,{value:e},t.children)},l={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,i=t.mdxType,o=t.originalType,c=t.parentName,u=a(t,["components","mdxType","originalType","parentName"]),d=p(r),m=i,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||o;return r?n.createElement(f,s(s({ref:e},u),{},{components:r})):n.createElement(f,s({ref:e},u))}));function m(t,e){var r=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=r.length,s=new Array(o);s[0]=d;var a={};for(var c in e)hasOwnProperty.call(e,c)&&(a[c]=e[c]);a.originalType=t,a.mdxType="string"==typeof t?t:i,s[1]=a;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},24711:function(t,e,r){r.r(e),r.d(e,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var n=r(87462),i=r(63366),o=(r(67294),r(3905)),s=["components"],a={},c="test",p={unversionedId:"scripting/tremor-script/stdlib/std/test",id:"scripting/tremor-script/stdlib/std/test",isDocsHomePage:!1,title:"test",description:"The test module is used for writing tremor unit tests.",source:"@site/docs/scripting/tremor-script/stdlib/std/test.md",sourceDirName:"scripting/tremor-script/stdlib/std",slug:"/scripting/tremor-script/stdlib/std/test",permalink:"/docs/next/scripting/tremor-script/stdlib/std/test",editUrl:"https://github.com/tremor-rs/tremor-www/tree/main/docs/scripting/tremor-script/stdlib/std/test.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"string",permalink:"/docs/next/scripting/tremor-script/stdlib/std/string"},next:{title:"type",permalink:"/docs/next/scripting/tremor-script/stdlib/std/type"}},u=[{value:"Functions",id:"functions",children:[{value:"assert(name, expected, got)",id:"assertname-expected-got",children:[]},{value:"suite()",id:"suite",children:[]},{value:"test()",id:"test-1",children:[]}]}],l={toc:u};function d(t){var e=t.components,r=(0,i.Z)(t,s);return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"test"},"test"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"test")," module is used for writing tremor unit tests."),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("h3",{id:"assertname-expected-got"},"assert(name, expected, got)"),(0,o.kt)("p",null,"Runs an assertion for a test, ensures that ",(0,o.kt)("inlineCode",{parentName:"p"},"expected")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"got")," are the\nsame. If not errors."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"WARNING"),": Do not run assertions in production code!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tremor"},'assert("one equals one", 1, 1) == true; # suces\nassert("one equals one", 1, 2); # errors\n')),(0,o.kt)("p",null,"Returns an ",(0,o.kt)("inlineCode",{parentName:"p"},"bool"),"."),(0,o.kt)("h3",{id:"suite"},"suite()"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"suite")," function is an entrypoint into tremor's\nintegrated unit testing framework"),(0,o.kt)("h3",{id:"test-1"},"test()"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"test")," function is an entrypoint into tremor's\nintegrated unit testing framework"))}d.isMDXComponent=!0}}]);