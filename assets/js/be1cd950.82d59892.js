"use strict";(self.webpackChunknew_tremor_website=self.webpackChunknew_tremor_website||[]).push([[7360],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=l(n),d=i,m=f["".concat(s,".").concat(d)]||f[d]||p[d]||o;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},19276:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return f}});var r=n(87462),i=n(63366),o=(n(67294),n(3905)),a=["components"],c={},s="win",l={unversionedId:"scripting/tremor-query/functions/aggr/win",id:"scripting/tremor-query/functions/aggr/win",isDocsHomePage:!1,title:"win",description:"The win module contains functions for aggregating over the current active window in a",source:"@site/docs/scripting/tremor-query/functions/aggr/win.md",sourceDirName:"scripting/tremor-query/functions/aggr",slug:"/scripting/tremor-query/functions/aggr/win",permalink:"/docs/next/scripting/tremor-query/functions/aggr/win",editUrl:"https://github.com/tremor-rs/tremor-www/tree/main/docs/scripting/tremor-query/functions/aggr/win.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"stats",permalink:"/docs/next/scripting/tremor-query/functions/aggr/stats"},next:{title:"Tremor-Script",permalink:"/docs/next/scripting/tremor-script/index"}},u=[{value:"Functions",id:"functions",children:[{value:"first()",id:"first",children:[]},{value:"last()",id:"last",children:[]},{value:"collect_flattened()",id:"collect_flattened",children:[]},{value:"collect_nested()",id:"collect_nested",children:[]}]}],p={toc:u};function f(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"win"},"win"),(0,o.kt)("p",null,"The win module contains functions for aggregating over the current active window in a\nwindow of events. The functions can also be used in tilt frames where events emitting\nfrom a window are chained across multiple window frames in sequence."),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("h3",{id:"first"},"first()"),(0,o.kt)("p",null,"Capture and return the first event that hits a window upon/after opening."),(0,o.kt)("p",null,"Returns ",(0,o.kt)("inlineCode",{parentName:"p"},"anything")),(0,o.kt)("h3",{id:"last"},"last()"),(0,o.kt)("p",null,"Capture and return the last event that hits a window upon/after opening."),(0,o.kt)("p",null,"Returns ",(0,o.kt)("inlineCode",{parentName:"p"},"anything")),(0,o.kt)("h3",{id:"collect_flattened"},"collect_flattened()"),(0,o.kt)("p",null,"Captures all events in a window into an array of events."),(0,o.kt)("p",null,"In the case of tilt frames, flattens out any tilt frame sub-arrays"),(0,o.kt)("p",null,"Returns a ",(0,o.kt)("inlineCode",{parentName:"p"},"[anything]")),(0,o.kt)("h3",{id:"collect_nested"},"collect_nested()"),(0,o.kt)("p",null,"Captures all events in a window into an array of events."),(0,o.kt)("p",null,"In the case of tilt frames, each frame is preserved as a nested array of arrays. For a tilt\nframe of 3 windows, the inner-most leaf array contains events, and higher levels are arrays of\narrays."),(0,o.kt)("p",null,"Returns a ",(0,o.kt)("inlineCode",{parentName:"p"},"[..[..[anything]..]..]")))}f.isMDXComponent=!0}}]);