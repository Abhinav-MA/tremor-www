"use strict";(self.webpackChunknew_tremor_website=self.webpackChunknew_tremor_website||[]).push([[2334],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return p}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),h=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=h(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=h(n),p=a,d=m["".concat(l,".").concat(p)]||m[p]||c[p]||o;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var h=2;h<o;h++)i[h]=n[h];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},89738:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return h},default:function(){return c}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],s={title:"Continuous Benchmarking in Tremor",slug:"continuous-benchmarking",author:"Akshat Agarwal",author_url:"https://twitter.com/humancalico",author_title:"Tremor Mentee",tags:["benchmarking"],description:"How we implemented a continuous benchmarking pipeline in Tremor.",draft:!1,hide_table_of_contents:!1},l={permalink:"/tremor-new-website/blog/continuous-benchmarking",editUrl:"https://github.com/tremor-rs/tremor-new-website/tree/main/blog/2021-07-14-continuous-benchmarking.md",source:"@site/blog/2021-07-14-continuous-benchmarking.md",title:"Continuous Benchmarking in Tremor",description:"How we implemented a continuous benchmarking pipeline in Tremor.",date:"2021-07-14T00:00:00.000Z",formattedDate:"July 14, 2021",tags:[{label:"benchmarking",permalink:"/tremor-new-website/blog/tags/benchmarking"}],readingTime:5.975,truncated:!0,nextItem:{title:"Property Based Testing of Tremor Script",permalink:"/tremor-new-website/blog/2021/07/06/Blog-Rohit-Property-Based-Testing"}},h=[{value:"Why?",id:"why",children:[]},{value:"How do we trigger the benchmark run and why GitHub Actions was a bad idea?",id:"how-do-we-trigger-the-benchmark-run-and-why-github-actions-was-a-bad-idea",children:[]},{value:"Tremor Community",id:"tremor-community",children:[]}],u={toc:h};function c(e){var t=e.components,s=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Hey I'm Akshat. Recently I had the chance to implement a continuous benchmarking\nsystem for Tremor under the ",(0,o.kt)("a",{parentName:"p",href:"https://mentorship.lfx.linuxfoundation.org"},"LFX Mentorship"),"\nprogram."),(0,o.kt)("h3",{id:"why"},"Why?"),(0,o.kt)("p",null,"So why do we need continuous benchmarking? Let's step back and ask what\nTremor is and what problem is it trying to solve."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Tremor is an event processing system originally designed for the needs of\nplatform engineering and infrastructure. Tremor has been running in production\nsince October 2018, processes 10 terabytes of data per day, or 10 billion\nmessages per minute and 10 million metrics per second. Tremor achieves this\nwith 10x footprint reduction in bare metal infrastructure and cloud based\ndeployments in 6 ( and counting ) systems at Wayfair, whilst reducing memory\nusage by 10x and delivering better quality of service under conditions when\nour network is saturated at peak eCommerce trading lifecycles. As a secondary\nbenefit, tremor is relatively low latency and relatively high throughput\nhowever this is an explicit non-goal of the project. Tremor is built for users\nthat have a high message volume to deal with and want to build pipelines to\nprocess, route, or limit this event stream. ",(0,o.kt)("sup",{parentName:"p",id:"fnref-1"},(0,o.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")))),(0,o.kt)("p",null,"Tremor emerged at Wayfair because the existing data distribution tools weren\u2019t\nperformant enough for their needs. So for\nthe kind of problem Tremor is trying to solve it makes sense to track its\nperformance over time and try to make it better or at least prevent any major\nregressions.",(0,o.kt)("sup",{parentName:"p",id:"fnref-2"},(0,o.kt)("a",{parentName:"sup",href:"#fn-2",className:"footnote-ref"},"2"))),(0,o.kt)("p",null,"We already had a decent benchmarking system in place. There was already a\n",(0,o.kt)("inlineCode",{parentName:"p"},"test")," subcommand in the tremor cli which can be used to run the benchmarks.\nTo run the whole benchmark suite run from the root of the tremor-runtime\nrepository you can run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"tremor test bench tremor-cli/tests\n")),(0,o.kt)("p",null,"The benchmarking system we had before this was, well it was mostly Heinz. So\nthe usual process was to submit a patch and if the patch affects the performance\nin some way Heinz pulls the changes, runs the benchmarks and if he gives it a\ngreen light then we\u2019re good to go. So the goal was clear - replace Heinz."),(0,o.kt)("p",null,"Anyhoo, a continuous benchmarking system comprises of a few things"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Something to run your benchmarks"),(0,o.kt)("li",{parentName:"ul"},"Someplace to store the data that is generated from those benchmarks"),(0,o.kt)("li",{parentName:"ul"},"Something to view the stored benchmark data")),(0,o.kt)("p",null,"Let\u2019s go through these one by one. We already had our benchmarks and know how\nto run them. We want our benchmark environment to be as consistent as possible\nsince any change in the environment would directly impact the benchmarks and it\nwon't be reliable. One way for it would be to run benchmarks on a bare metal\ninstance specifically dedicated for benchmarking. CNCF was kind enough to\nprovide us one where we could run our benchmarks and do our experiments. This\nwas great for me as well since ",(0,o.kt)("inlineCode",{parentName:"p"},"cargo build"),"s wouldn't take a week now."),(0,o.kt)("p",null,"You ",(0,o.kt)("em",{parentName:"p"},"can")," run your benchmarks on something like the VMs provided by\nGitHub Actions as well but doing that would be unreliable due to the\n",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Cloud_computing_issues#Performance_interference_and_noisy_neighbors"},"noisy neighbour effect"),". ",(0,o.kt)("sup",{parentName:"p",id:"fnref-3"},(0,o.kt)("a",{parentName:"sup",href:"#fn-3",className:"footnote-ref"},"3"))),(0,o.kt)("p",null,"Secondly, we need someplace to store that benchmark data so that we can view\nhow it changed over time. This can be a SQL database, a metrics oriented\ndatabase or a git repository. We store our benchmark data in a JSON\nfile and push it to a git repository."),(0,o.kt)("p",null,"Finally, we use that JSON data to plot a time series graph to see how the\nperformance changed over time."),(0,o.kt)("h3",{id:"how-do-we-trigger-the-benchmark-run-and-why-github-actions-was-a-bad-idea"},"How do we trigger the benchmark run and why GitHub Actions was a bad idea?"),(0,o.kt)("p",null,"To trigger the benchmark runs we tried using the self hosted runner for GitHub\nActions but that comes with a few problems of it's own. Anyone who can create a\nfork of the repo can modify the workflow file and run any arbitrary code on our\nmachine. ",(0,o.kt)("sup",{parentName:"p",id:"fnref-4"},(0,o.kt)("a",{parentName:"sup",href:"#fn-4",className:"footnote-ref"},"4"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"We recommend that you only use self-hosted runners with private repositories.\nThis is because forks of your repository can potentially run dangerous code on\nyour self-hosted runner machine by creating a pull request that runs the\ncode in a workflow. This is not an issue with GitHub-hosted runners because\neach GitHub-hosted runner is always a clean isolated virtual machine, and it\nis decomisioned at the end of the job. Untrusted workflows running on\nyour self-hosted runner pose significant security risks for your machine and\nnetwork environment, especially if your machine persists its environment\nbetween jobs. Some of the risks include:"),(0,o.kt)("ul",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ul"},"Malicious programs running on the machine."),(0,o.kt)("li",{parentName:"ul"},"Escaping the machine's runner sandbox."),(0,o.kt)("li",{parentName:"ul"},"Exposing access to the machine's network environment."),(0,o.kt)("li",{parentName:"ul"},"Persisting unwanted or dangerous data on the machine. ",(0,o.kt)("sup",{parentName:"li",id:"fnref-5"},(0,o.kt)("a",{parentName:"sup",href:"#fn-5",className:"footnote-ref"},"5"))))),(0,o.kt)("p",null,"The day after we were discussing this GitHub announced\n",(0,o.kt)("a",{parentName:"p",href:"https://github.blog/2021-04-22-github-actions-update-helping-maintainers-combat-bad-actors/"},"this"),"\nwhich meant that first-time contributors would now require a manual approval\nfrom maintainers before any Actions workflow can run which solves the problem\nbut only partly. This solution assumes that someone has already committed to a\nrepository they won\u2019t go rogue which is a fair assumption to make since most\nspammers don't have any contributions to the project they are spamming to but\nstill an assumption that can\u2019t be guaranteed."),(0,o.kt)("p",null,"So in the end we went with a webhooks based solution with a workflow like this:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A PR gets merged to the main branch or a bench label is added to the PR."),(0,o.kt)("li",{parentName:"ul"},"GitHub sends the payload to the webhooks server"),(0,o.kt)("li",{parentName:"ul"},"The webhooks server starts a docker container, builds tremor and benchmarks it"),(0,o.kt)("li",{parentName:"ul"},"It pushes the JSON data to the Git repository"),(0,o.kt)("li",{parentName:"ul"},"And finally removes the Docker container")),(0,o.kt)("p",null,"The end result looks something like this"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Image for the Tremor Benchmark website",src:n(7133).Z})),(0,o.kt)("p",null,"A lot of this setup for the charts is inspired by the Continuous Benchmarks of\n",(0,o.kt)("a",{parentName:"p",href:"https://deno.land/benchmarks"},"Deno"),". We even use the same charting library."),(0,o.kt)("h3",{id:"tremor-community"},"Tremor Community"),(0,o.kt)("p",null,"This was the first formal internship/mentorship I\u2019ve ever done and I\nam grateful to be a part of it. I learned a lot in these past few months. A lot\nhas changed in the way that I think not only about code or how to approach a\nproblem but about work and life in general and I'm grateful for that. Thanks\nAnup, Darach, Heinz and Matthias for being such awesome mentors. Thanks Ana for\nalways being so helpful. Thanks to the other mentors who were a part of this\nprogram with me. It was a great time working with everyone and I look forward\nto some more."),(0,o.kt)("p",null,"If you have any suggestions/thoughts/questions or wanna say hi you can\nmessage me on ",(0,o.kt)("a",{parentName:"p",href:"https://twitter.com/humancalico"},"Twitter")," or email me at\n",(0,o.kt)("a",{parentName:"p",href:"mailto:humancalico@disroot.org"},"humancalico@disroot.org")),(0,o.kt)("div",{className:"footnotes"},(0,o.kt)("hr",{parentName:"div"}),(0,o.kt)("ol",{parentName:"div"},(0,o.kt)("li",{parentName:"ol",id:"fn-1"},"See /docs/",(0,o.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")),(0,o.kt)("li",{parentName:"ol",id:"fn-2"},"This might not be true for every change since if there is a feature that is much needed and adding it causes a little regression. We'll probably choose adding that feature instead of rejecting it because of the regression.",(0,o.kt)("a",{parentName:"li",href:"#fnref-2",className:"footnote-backref"},"\u21a9")),(0,o.kt)("li",{parentName:"ol",id:"fn-3"},"Technically you can still benchmarks on the CI by measuring a different metric. See ",(0,o.kt)("a",{parentName:"li",href:"https://pythonspeed.com/articles/consistent-benchmarking-in-ci/"},"benchmarking")," in ",(0,o.kt)("a",{parentName:"li",href:"https://bheisler.github.io/post/benchmarking-in-the-cloud/"},"noisy")," ",(0,o.kt)("a",{parentName:"li",href:"https://bheisler.github.io/post/criterion-rs-0-3-4/"},"environments"),".",(0,o.kt)("a",{parentName:"li",href:"#fnref-3",className:"footnote-backref"},"\u21a9")),(0,o.kt)("li",{parentName:"ol",id:"fn-4"},"See ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/actions/runner/issues/494"},"github.com/actions/runner/issues/494"),".",(0,o.kt)("a",{parentName:"li",href:"#fnref-4",className:"footnote-backref"},"\u21a9")),(0,o.kt)("li",{parentName:"ol",id:"fn-5"},(0,o.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners#self-hosted-runner-security-with-public-repositories"},"Self-hosted runner security with public repositories"),".",(0,o.kt)("a",{parentName:"li",href:"#fnref-5",className:"footnote-backref"},"\u21a9")))))}c.isMDXComponent=!0},7133:function(e,t,n){t.Z=n.p+"assets/images/tremor-benchmark-fb58d0f63723ef46384275f233de265a.png"}}]);