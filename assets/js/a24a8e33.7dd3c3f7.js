"use strict";(self.webpackChunknew_tremor_website=self.webpackChunknew_tremor_website||[]).push([[3591],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return y}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),p=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(s.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(t),y=a,m=d["".concat(s,".").concat(y)]||d[y]||u[y]||i;return t?n.createElement(m,l(l({ref:r},c),{},{components:t})):n.createElement(m,l({ref:r},c))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var s in r)hasOwnProperty.call(r,s)&&(o[s]=r[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9572:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var n=t(7462),a=t(3366),i=(t(7294),t(3905)),l=["components"],o={},s="array",p={unversionedId:"tremor-script/stdlib/std/array",id:"tremor-script/stdlib/std/array",isDocsHomePage:!1,title:"array",description:"The array module contains functions to work for arrays.",source:"@site/docs/tremor-script/stdlib/std/array.md",sourceDirName:"tremor-script/stdlib/std",slug:"/tremor-script/stdlib/std/array",permalink:"/tremor-new-website/docs/tremor-script/stdlib/std/array",editUrl:"https://github.com/tremor-rs/tremor-new-website/tree/main/docs/tremor-script/stdlib/std/array.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"std",permalink:"/tremor-new-website/docs/tremor-script/stdlib/std"},next:{title:"base64",permalink:"/tremor-new-website/docs/tremor-script/stdlib/std/base64"}},c=[{value:"Functions",id:"functions",children:[{value:"len(array)",id:"lenarray",children:[]},{value:"is_empty(array)",id:"is_emptyarray",children:[]},{value:"contains(array, element)",id:"containsarray-element",children:[]},{value:"push(array, element)",id:"pusharray-element",children:[]},{value:"zip(left, right)",id:"zipleft-right",children:[]},{value:"unzip(array)",id:"unziparray",children:[]},{value:"flatten(array)",id:"flattenarray",children:[]},{value:"coalesce(array)",id:"coalescearray",children:[]},{value:"join(array, string)",id:"joinarray-string",children:[]},{value:"concatenate(left, right)",id:"concatenateleft-right",children:[]}]}],u={toc:c};function d(e){var r=e.components,t=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"array"},"array"),(0,i.kt)("p",null,"The array module contains functions to work for arrays."),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"lenarray"},"len(array)"),(0,i.kt)("p",null,"Returns the length of ",(0,i.kt)("inlineCode",{parentName:"p"},"array"),"."),(0,i.kt)("p",null,"Returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"integer"),"."),(0,i.kt)("h3",{id:"is_emptyarray"},"is_empty(array)"),(0,i.kt)("p",null,"Returns if ",(0,i.kt)("inlineCode",{parentName:"p"},"array")," is empty."),(0,i.kt)("p",null,"Returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"bool"),"."),(0,i.kt)("h3",{id:"containsarray-element"},"contains(array, element)"),(0,i.kt)("p",null,"Returns if ",(0,i.kt)("inlineCode",{parentName:"p"},"array")," contains an ",(0,i.kt)("inlineCode",{parentName:"p"},"element"),"."),(0,i.kt)("p",null,"Returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"bool"),"."),(0,i.kt)("h3",{id:"pusharray-element"},"push(array, element)"),(0,i.kt)("p",null,"Adds an ",(0,i.kt)("inlineCode",{parentName:"p"},"element")," to the end of ",(0,i.kt)("inlineCode",{parentName:"p"},"array"),"."),(0,i.kt)("p",null,"Returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"array"),"."),(0,i.kt)("h3",{id:"zipleft-right"},"zip(left, right)"),(0,i.kt)("p",null,"Zips two arrays, returning a new array of tuples for the first element\nbeing part of the left array and the second element part of the right\narray."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note"),": left and right need to have the same length."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tremor"},'let left = [1, 2, 3];\nlet right = ["a", "b", "c"];\narray::zip(left, right) == [[1, "a"], [2, "b"], [3, "c"]]\n')),(0,i.kt)("p",null,"Returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"array"),"."),(0,i.kt)("h3",{id:"unziparray"},"unzip(array)"),(0,i.kt)("p",null,"Unzips an array of tuples into an array of two arrays."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note"),": array's elements need to be arrays of two elements."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tremor"},'array::unzip([[1, "a"], [2, "b"], [3, "c"]]) ==  [[1, 2, 3], ["a", "b", "c"]]\n')),(0,i.kt)("p",null,"Returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"array"),"."),(0,i.kt)("h3",{id:"flattenarray"},"flatten(array)"),(0,i.kt)("p",null,"Flattens a nested array recursively."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tremor"},'array::flatten([[1, 2, 3], ["a", "b", "c"]]) = [1, 2, 3, "a", "b", "c"]\n')),(0,i.kt)("p",null,"Returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"array"),"."),(0,i.kt)("h3",{id:"coalescearray"},"coalesce(array)"),(0,i.kt)("p",null,"Returns the array for null values removed."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tremor"},"array::coalesce([1, null, 2, null, 3]) = [1, 2, 3]\n")),(0,i.kt)("p",null,"Returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"array"),"."),(0,i.kt)("h3",{id:"joinarray-string"},"join(array, string)"),(0,i.kt)("p",null,"Joins the elements of an array (turing them into Strings) for a given\nseparator."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tremor"},'array:join(["this", "is", "a", "cake"], " ") => "this is a cake"\n')),(0,i.kt)("p",null,"Returns a ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),"."),(0,i.kt)("h3",{id:"concatenateleft-right"},"concatenate(left, right)"),(0,i.kt)("p",null,"Concatenates two arrays returning a new array. The new array is not a set,\ni.e. it can contain duplicates depending on the input arrays."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tremor"},"array::concatenate([1, 2, 3], [3, 4]) == [1, 2, 3, 3, 4]\n")),(0,i.kt)("p",null,"Returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"array")))}d.isMDXComponent=!0}}]);