(self.webpackChunknew_tremor_website=self.webpackChunknew_tremor_website||[]).push([[308],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5540:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],s={},l="Transform",p={unversionedId:"Workshop/examples/transform/README",id:"Workshop/examples/transform/README",isDocsHomePage:!1,title:"Transform",description:"The transform example builds on the filter example and extends the example.trickle by adding a transformation that modifies the incoming event. The produced event from this query statement has a different structure than the incoming event.",source:"@site/docs/Workshop/examples/02_transform/README.md",sourceDirName:"Workshop/examples/02_transform",slug:"/Workshop/examples/transform/README",permalink:"tremor-new-website/docs/Workshop/examples/transform/README",editUrl:"https://github.com/skoech/tremor-new-website/tree/main/docs/docs/Workshop/examples/02_transform/README.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Filter",permalink:"tremor-new-website/docs/Workshop/examples/filter/README"},next:{title:"Transform",permalink:"tremor-new-website/docs/Workshop/examples/validate/README"}},c=[{value:"Environment",id:"environment",children:[]},{value:"Business Logic",id:"business-logic",children:[]},{value:"Command line testing during logic development",id:"command-line-testing-during-logic-development",children:[{value:"Discussion",id:"discussion",children:[]},{value:"Examples",id:"examples",children:[]}]}],m={toc:c};function u(e){var t=e.components,s=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"transform"},"Transform"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"transform")," example builds on the ",(0,o.kt)("a",{parentName:"p",href:"tremor-new-website/docs/Workshop/examples/filter/README"},"filter example")," and extends the ",(0,o.kt)("a",{target:"_blank",href:n(1616).Z},(0,o.kt)("code",null,"example.trickle"))," by adding a transformation that modifies the incoming event. The produced event from this query statement has a different structure than the incoming event."),(0,o.kt)("h2",{id:"environment"},"Environment"),(0,o.kt)("p",null,"It connects to the pipeline ",(0,o.kt)("inlineCode",{parentName:"p"},"example")," in the ",(0,o.kt)("a",{target:"_blank",href:n(1616).Z},(0,o.kt)("code",null,"example.trickle"))," file using the tremor script language to change the json for the log."),(0,o.kt)("p",null,"All other configuration is the same as per the passthrough example, and is elided here for brevity."),(0,o.kt)("h2",{id:"business-logic"},"Business Logic"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-trickle"},'select {                                    # 1. We can inline new json-like document structures\n    "hello": "hi there #{event.hello}",      # 2. Tremor supports flexible string interpolation useful for templating\n    "world": event.hello\n} from in where event.selected into out\n')),(0,o.kt)("h2",{id:"command-line-testing-during-logic-development"},"Command line testing during logic development"),(0,o.kt)("p",null,"Run a the passthrough query against a sample input.json"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ tremor run -i input.json ./etc/tremor/config/example.trickle\n{"hello":"hi there world","world":"world"}\n')),(0,o.kt)("p",null,"Change the ",(0,o.kt)("inlineCode",{parentName:"p"},"input.json")," and toggle the ",(0,o.kt)("inlineCode",{parentName:"p"},"selected")," filed to true and run again."),(0,o.kt)("p",null,"Deploy the solution into a docker environment"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ docker-compose up\n>> {"hello":"hi there again","world":"again"}\n')),(0,o.kt)("p",null,"Inject test messages via ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/vi/websocat"},"websocat")),(0,o.kt)("p",null,"!!! note\nCan be installed via ",(0,o.kt)("inlineCode",{parentName:"p"},"cargo install websocat")," for the lazy/impatient amongst us"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ cat inputs.txt | websocat ws://localhost:4242\n...\n")),(0,o.kt)("h3",{id:"discussion"},"Discussion"),(0,o.kt)("p",null,"Transformations in tremor query ( ",(0,o.kt)("inlineCode",{parentName:"p"},"trickle")," ) can be any legal type / value supported\nby the tremor family of languages:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A boolean value"),(0,o.kt)("li",{parentName:"ul"},"An integer"),(0,o.kt)("li",{parentName:"ul"},"A floating point value"),(0,o.kt)("li",{parentName:"ul"},"A UTF-8 encoded string"),(0,o.kt)("li",{parentName:"ul"},"An array of any legal value"),(0,o.kt)("li",{parentName:"ul"},"A record of field / value pairs where the field name is a string, and the value is any legal value")),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("h4",{id:"templating-percentile-estimates-from-hdr-histogram"},"Templating percentile estimates from HDR Histogram"),(0,o.kt)("p",null,"In this example, we restructure output from the tremor ",(0,o.kt)("inlineCode",{parentName:"p"},"aggr::stats::hdr")," aggregate function\nand use string interpolation to generate record templates with a field naming scheme and\nstructure this is compatible with tremor's influx data offramp."),(0,o.kt)("p",null,"A nice advantage of tremor, is that the business logic is separate from any externalising\nfactors. However, one drawback with unstructured transformations is there is no\nexplicit validation by schema supported by tremor out of the box - although, there are\npatterns in use to validate against external schema formats in use in production."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-trickle"},'select {\n  "measurement":  event.measurement,\n  "tags":  event.tags,\n  "timestamp": event.timestamp,\n  "fields":  {\n    # the following fields are generated by templating / string interpolation\n    "count_#{event.class}":  event.stats.count,\n    "min_#{event.class}":  event.stats.min,\n    "max_#{event.class}":  event.stats.max,\n    "mean_#{event.class}":  event.stats.mean,\n    "stdev_#{event.class}":  event.stats.stdev,\n    "var_#{event.class}":  event.stats.var,\n    "p50_#{event.class}":  event.stats.percentiles["0.5"],\n    "p90_#{event.class}":  event.stats.percentiles["0.9"],\n    "p99_#{event.class}":  event.stats.percentiles["0.99"],\n    "p99.9_#{event.class}":  event.stats.percentiles["0.999"]\n  }\n}\nfrom normalize\ninto batch;\n')),(0,o.kt)("p",null,"!!! tip\nNot all tremor script ideoms are allowed in the select statement. Most notably we do not allow any mutating operations such as ",(0,o.kt)("inlineCode",{parentName:"p"},"let")," or control flow such as ",(0,o.kt)("inlineCode",{parentName:"p"},"emit")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"drop"),". Those constructs can however still be used inside a ",(0,o.kt)("inlineCode",{parentName:"p"},"script")," block on their own."))}u.isMDXComponent=!0},1616:function(e,t,n){"use strict";t.Z=n.p+"assets/files/example-f4d39b91cf83b649304c8f93c1e79821.trickle"}}]);