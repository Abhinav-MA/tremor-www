"use strict";(self.webpackChunknew_tremor_website=self.webpackChunknew_tremor_website||[]).push([[833],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(f,c(c({ref:t},l),{},{components:r})):n.createElement(f,c({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=r[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2344:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),c=["components"],i={},s="Base64",p={unversionedId:"tremor-script/extractors/base64",id:"tremor-script/extractors/base64",isDocsHomePage:!1,title:"Base64",description:"The base64 extractor decodes content encoded with the Base64 binary-to-text encoding scheme into the corresponding string value.",source:"@site/docs/tremor-script/extractors/base64.md",sourceDirName:"tremor-script/extractors",slug:"/tremor-script/extractors/base64",permalink:"/docs/next/tremor-script/extractors/base64",editUrl:"https://github.com/tremor-rs/tremor-www/tree/main/docs/tremor-script/extractors/base64.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Extractors",permalink:"/docs/next/tremor-script/extractors"},next:{title:"CIDR",permalink:"/docs/next/tremor-script/extractors/cidr"}},l=[{value:"Predicate",id:"predicate",children:[]},{value:"Extraction",id:"extraction",children:[]},{value:"Example",id:"example",children:[]}],u={toc:l};function d(e){var t=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"base64"},"Base64"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"base64")," extractor decodes content encoded with the Base64 binary-to-text encoding scheme into the corresponding string value."),(0,a.kt)("h2",{id:"predicate"},"Predicate"),(0,a.kt)("p",null,"When used as a predicate test with ",(0,a.kt)("inlineCode",{parentName:"p"},"~"),", and the referent target is a valid string and is base64 encoded, then the test succeeds."),(0,a.kt)("h2",{id:"extraction"},"Extraction"),(0,a.kt)("p",null,"If predicate test succeeds, then the decoded base64 content it extracted and returned as a string literal."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tremor"},'match { "test": "8J+MiiBzbm90IGJhZGdlcg==", "footle":\xb7"bar" } of\n  case foo = %{test ~= base64|| } => foo\nend;\n## Output: \ud83c\udf0a snot badger\n')))}d.isMDXComponent=!0}}]);