(self.webpackChunknew_tremor_website=self.webpackChunknew_tremor_website||[]).push([[794],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=p(r),m=o,h=f["".concat(c,".").concat(m)]||f[m]||u[m]||i;return r?n.createElement(h,a(a({ref:t},l),{},{components:r})):n.createElement(h,a({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3547:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return f}});var n=r(2122),o=r(9756),i=(r(7294),r(3905)),a=["components"],s={title:"Improving our Influx Parser- A Story in Four Acts",author:"The Tremor Team",author_image_url:"https://avatars.githubusercontent.com/u/60009416?s=200&v=4",tags:["perf"],draft:!1,hide_table_of_contents:!1,description:"The process of improving the performance of our influx line protocol parser."},c="Influx Parsing Performance",p={permalink:"/tremor-new-website/blog/2020/03/06/influx-perf",editUrl:"https://github.com/skoech/tremor-new-website/tree/main/docs/blog/2020-03-06-influx-perf.md",source:"@site/blog/2020-03-06-influx-perf.md",title:"Improving our Influx Parser- A Story in Four Acts",description:"The process of improving the performance of our influx line protocol parser.",date:"2020-03-06T00:00:00.000Z",formattedDate:"March 6, 2020",tags:[{label:"perf",permalink:"/tremor-new-website/blog/tags/perf"}],readingTime:8.895,truncated:!0,prevItem:{title:"Rust & Tell Berlin- March 2020",permalink:"/tremor-new-website/blog/2020/03/31/rust-and-tell"},nextItem:{title:"Tremor is now Open Source!",permalink:"/tremor-new-website/blog/2020/02/22/welcome"}},l=[],u={toc:l};function f(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Yesterday, we spent the day on a report ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/tremor-rs/tremor-runtime/issues/82"},"that our influx parser was slow"),", and it turns out it was indeed."),(0,i.kt)("p",null,"This is an exciting topic as just a few days ago, we ",(0,i.kt)("a",{parentName:"p",href:"https://bobkonf.de/2020/ennis-gies.html"},"gave a talk at BoBKonf 2020")," on this topic, so this is a great opportunity to show some of the topics and our process in action."),(0,i.kt)("p",null,"All the topics in this blog are links; the main one above this text is to the pull request, the titles of each section link to the commit that implements the topic discussed. Go ahead, click on some, and take a look!"),(0,i.kt)("p",null,"There are two tools worth introducing here that we used during this performance session."),(0,i.kt)("p",null,"One is ",(0,i.kt)("a",{parentName:"p",href:"http://brendangregg.com/perf.html"},"perf"),", which we used with a minimal setup of ",(0,i.kt)("inlineCode",{parentName:"p"},"perf record")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"perf report"),". We use this to get a glance at where code is spending time. This is not perfect, but it is quick and easy for decent results."),(0,i.kt)("p",null,"The other one is ",(0,i.kt)("a",{parentName:"p",href:"https://docs.rs/criterion/0.3.1/criterion/"},"criterion"),", an excellent Rust framework for microbenchmarks based on the ",(0,i.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/criterion"},"haskell framework")," with the same name. It is so helpful since it allows us to show changes in performance between changes. That makes it perfect for the kind of incremental improvements our process favors."))}f.isMDXComponent=!0}}]);