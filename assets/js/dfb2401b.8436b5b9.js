"use strict";(self.webpackChunknew_tremor_website=self.webpackChunknew_tremor_website||[]).push([[9296],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},l),{},{components:n})):r.createElement(f,o({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},24873:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],c={},p={unversionedId:"tremor-script/stdlib/cncf/otel/trace/spankind",id:"tremor-script/stdlib/cncf/otel/trace/spankind",isDocsHomePage:!1,title:"spankind",description:"SpanKind is the type of span. Can be used to specify additional relationships between spans",source:"@site/docs/tremor-script/stdlib/cncf/otel/trace/spankind.md",sourceDirName:"tremor-script/stdlib/cncf/otel/trace",slug:"/tremor-script/stdlib/cncf/otel/trace/spankind",permalink:"/docs/tremor-script/stdlib/cncf/otel/trace/spankind",editUrl:"https://github.com/tremor-rs/tremor-new-website/tree/main/docs/tremor-script/stdlib/cncf/otel/trace/spankind.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"trace",permalink:"/docs/tremor-script/stdlib/cncf/otel/trace"},next:{title:"status",permalink:"/docs/tremor-script/stdlib/cncf/otel/trace/status"}},s=[{value:"Constants",id:"constants",children:[{value:"unspecified",id:"unspecified",children:[]},{value:"internal",id:"internal",children:[]},{value:"server",id:"server",children:[]},{value:"client",id:"client",children:[]},{value:"producer",id:"producer",children:[]},{value:"consumer",id:"consumer",children:[]}]}],l={toc:s};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"SpanKind is the type of span. Can be used to specify additional relationships between spans\nin addition to a parent/child relationship."),(0,i.kt)("h2",{id:"constants"},"Constants"),(0,i.kt)("h3",{id:"unspecified"},"unspecified"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"type"),": I64"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Unspecified. Do NOT use as default.\nImplementations MAY assume SpanKind to be ",(0,i.kt)("inlineCode",{parentName:"p"},"INTERNAL")," when receiving ",(0,i.kt)("inlineCode",{parentName:"p"},"UNSPECIFIED"),".")),(0,i.kt)("h3",{id:"internal"},"internal"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"type"),": I64"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Indicates that the span represents an internal operation within an application,\nas opposed to an operation happening at the boundaries. Default value.")),(0,i.kt)("h3",{id:"server"},"server"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"type"),": I64"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Indicates that the span covers server-side handling of an RPC or other\nremote network request.")),(0,i.kt)("h3",{id:"client"},"client"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"type"),": I64"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Indicates that the span describes a request to some remote service.")),(0,i.kt)("h3",{id:"producer"},"producer"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"type"),": I64"),(0,i.kt)("p",null,"Indicates that the span describes a producer sending a message to a broker."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Unlike ",(0,i.kt)("inlineCode",{parentName:"p"},"CLIENT")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"SERVER"),", there is often no direct critical path latency relationship\nbetween producer and consumer spans. A ",(0,i.kt)("inlineCode",{parentName:"p"},"PRODUCER")," span ends when the message was accepted\nby the broker while the logical processing of the message might span a much longer time.")),(0,i.kt)("h3",{id:"consumer"},"consumer"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"type"),": I64"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Indicates that the span describes consumer receiving a message from a broker.\nLike the ",(0,i.kt)("inlineCode",{parentName:"p"},"PRODUCER")," kind, there is often no direct critical path latency relationship\nbetween producer and consumer spans."),(0,i.kt)("h2",{parentName:"blockquote",id:"functions"},"Functions"),(0,i.kt)("h3",{parentName:"blockquote",id:"make_default"},"make_default()")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," function returns the preferred default spankind if/when none is\nspecified"))}u.isMDXComponent=!0}}]);